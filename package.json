{
  "name": "web-node",
  "version": "1.0.423",
  "license": "CC-BY-3.0",
  "description": "High level javaScript backend plugin system and configuration merger.",
  "homepage": "https://torben.website/web-node",
  "documentationWebsite": {
    "name": "web-node",
    "trackingCode": "UA-40192634-9"
  },
  "keywords": [
    "web",
    "backend",
    "api",
    "plugin",
    "management"
  ],
  "files": [
    "configurator.d.ts",
    "index.d.ts",
    "index.js",
    "pluginAPI.d.ts",
    "type.d.ts",
    "unixCrypt.d.ts",
    "unixCrypt.js"
  ],
  "bin": {
    "web-node": "index.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/web-node.git"
  },
  "scripts": {
    "build": "weboptimizer build",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "prepare": "yarn build",
    "report:coverage": "nyc report --reporter=text-lcov | coveralls",
    "serve": "weboptimizer build && yarn serve",
    "start": "./index.js '{plugin: {hotReloading: true}}'",
    "test": "pushd dummyPlugin && yarn build && popd && weboptimizer test",
    "update": "yarn version --patch && yarn publish",
    "update:documentation": "documentationWebsite --log-level info",
    "watch": "weboptimizer build --watch"
  },
  "dependencies": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz"
  },
  "devDependencies": {
    "@babel/cli": "*",
    "@babel/eslint-parser": "*",
    "@types/jest": "*",
    "@types/node": "*",
    "@types/workbox-webpack-plugin": "*",
    "@typescript-eslint/eslint-plugin": "*",
    "@typescript-eslint/parser": "*",
    "clientnode": "*",
    "documentation-website": "*",
    "eslint": "*",
    "eslint-config-google": "*",
    "eslint-plugin-jsdoc": "*",
    "jest": "*",
    "jsdoc": "*",
    "weboptimizer": "*"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "clientnode": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    }
  },
  "resolutions": {
    "@types/webpack": "https://registry.yarnpkg.com/@favware/skip-dependency/-/skip-dependency-1.1.1.tgz",
    "colors": "1.4.0"
  },
  "sideEffects": true,
  "webNode": {
    "core": {
      "context": {
        "path": "./",
        "type": "relative"
      },
      "debug": false,
      "encoding": "utf8",
      "interDependencies": {},
      "name": "web-node",
      "plugin": {
        "configuration": {
          "fileNames": [
            "package.json",
            "private-package.json"
          ],
          "propertyNames": [
            "webNode",
            "webnode",
            "web-node"
          ]
        },
        "directories": {
          "external": {
            "nameRegularExpressionPattern": "^([a-zA-Z0-9-]+?)-?[wW]eb-?[nN]ode-?[pP]lugin$",
            "path": {
              "__evaluate__": "`${currentPath}/node_modules/`"
            }
          },
          "internal": {
            "nameRegularExpressionPattern": "^([a-zA-Z0-9-_].*)$",
            "path": {
              "__evaluate__": "`${currentPath}/plugins/`"
            }
          }
        },
        "hotReloading": false
      }
    }
  },
  "webOptimizer": {
    "assetPattern": {
      "javaScript": {
        "includeFilePathRegularExpression": "^(.+/)?index\\.js$",
        "pattern": {
          "#": "This is how we can make our main exported artefact executable.",
          "__evaluate__": "`#!/usr/bin/env node\n// -*- coding: utf-8 -*-\n${self.generic.assetPattern.javaScript.pattern}if(module===eval('require.main'))module.paths.unshift('/application/node_modules');{1}`"
        }
      }
    },
    "exportFormat": {
      "external": "commonjs2",
      "self": "commonjs2"
    },
    "injection": {
      "entry": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2] === 'test' ? {testBundle: 'test'} : {index: './index.ts', unixCrypt: './unixCrypt.ts'}"
      }
    },
    "module": {
      "optimizer": {
        "babelMinify": {
          "#": "To provide a logging output we need to exclude this feature.",
          "__evaluate__": "self.debug ? {bundle: null, module: null} : {bundle: {transform: {removeConsole: false}}, module: {removeConsole: false}}"
        }
      }
    },
    "targetTechnology": {
      "boilerplate": "node",
      "payload": "node"
    }
  }
}
