{
  "name": "web-node",
  "version": "1.0.548",
  "description": "High level javaScript backend plugin system and configuration merger.",
  "keywords": [
    "api",
    "backend",
    "management",
    "plugin",
    "web"
  ],
  "homepage": "https://torben.website/web-node",
  "bugs": {
    "email": "info@torben.website",
    "url": "https://github.com/thaibault/web-node/issues"
  },
  "license": "CC-BY-3.0",
  "author": {
    "name": "Torben Sickert",
    "email": "info@torben.website",
    "url": "https://torben.website"
  },
  "files": [
    "configurator.d.ts",
    "index.d.ts",
    "index.js",
    "pluginAPI.d.ts",
    "type.d.ts",
    "unixCrypt.d.ts",
    "unixCrypt.js"
  ],
  "bin": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/thaibault/web-node.git"
  },
  "scripts": {
    "build": "yarn build:types; yarn build:plain",
    "build:plain": "weboptimizer build",
    "build:types": "weboptimizer build:types",
    "check": "yarn check:types; yarn lint",
    "check:types": "weboptimizer check:types",
    "clear": "weboptimizer clear",
    "document": "weboptimizer document",
    "lint": "weboptimizer lint",
    "prepare": "yarn build",
    "serve": "yarn build:plain && yarn start",
    "start": "./index.js '{plugin: {hotReloading: true}}'",
    "prepare:test": "yarn clear && cd dummyPlugin && shx touch yarn.lock && yarn build && cd ..",
    "test": "yarn prepare:test && weboptimizer test",
    "test:coverage": "yarn prepare:test && weboptimizer test:coverage",
    "test:coverage:report": "yarn prepare:test && weboptimizer test:coverage:report",
    "update:documentation": "documentation-website",
    "watch": "weboptimizer build --watch"
  },
  "runkitExample": "require('@babel/runtime/package.json')\nrequire('clientnode/package.json')\n\nconst {loadFile} = require('web-node')\n\nloadFile('./unixCrypt.js', 'crypt')('test')",
  "devDependencies": {
    "@babel/cli": "^7.27.2",
    "@babel/eslint-parser": "^7.27.5",
    "@babel/runtime": "^7.27.6",
    "@stylistic/eslint-plugin": "^5.1.0",
    "@types/node": "^24.0.8",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "@typescript-eslint/parser": "^8.35.1",
    "clientnode": "^3.0.1298",
    "documentation-website": "^1.0.387",
    "eslint": "^9.30.0",
    "eslint-config-google": "^0.14.0",
    "eslint-plugin-jsdoc": "^50.8.0",
    "jest": "^30.0.3",
    "jsdoc": "^4.0.4",
    "shx": "^0.4.0",
    "typescript-eslint": "^8.35.1",
    "weboptimizer": "^2.0.1593"
  },
  "peerDependencies": {
    "@babel/runtime": "*",
    "clientnode": "*"
  },
  "peerDependenciesMeta": {
    "@babel/runtime": {
      "optional": true
    }
  },
  "engines": {
    "node": ">=20",
    "npm": ">=10",
    "yarn": ">=4"
  },
  "resolutions": {
    "colors": "1.4.0",
    "globals@npm:^14.0.0": "patch:globals@npm%3A11.12.0#~/.yarn/patches/globals-npm-11.12.0-1fa7f41a6c.patch",
    "globals@npm:^11.1.0": "patch:globals@npm%3A11.12.0#~/.yarn/patches/globals-npm-11.12.0-1fa7f41a6c.patch",
    "globals@npm:^9.18.0": "patch:globals@npm%3A11.12.0#~/.yarn/patches/globals-npm-11.12.0-1fa7f41a6c.patch"
  },
  "sideEffects": true,
  "documentationWebsite": {
    "name": "web-node",
    "trackingCode": "UA-40192634-9"
  },
  "webNode": {
    "core": {
      "context": {
        "path": "./",
        "type": "relative"
      },
      "debug": false,
      "encoding": "utf8",
      "interDependencies": {},
      "name": "web-node",
      "plugin": {
        "configuration": {
          "fileNames": [
            "package.json",
            "private-package.json"
          ],
          "propertyNames": [
            "webNode",
            "webnode",
            "web-node"
          ]
        },
        "directories": {
          "external": {
            "nameRegularExpressionPattern": "^([a-zA-Z0-9-]+?)-?[wW]eb-?[nN]ode-?[pP]lugin$",
            "path": {
              "__evaluate__": "`${currentPath}/node_modules/`"
            }
          },
          "internal": {
            "nameRegularExpressionPattern": "^([a-zA-Z0-9-_].*)$",
            "path": {
              "__evaluate__": "`${currentPath}/plugins/`"
            }
          }
        },
        "hotReloading": false
      }
    }
  },
  "webOptimizer": {
    "assetPattern": {
      "javaScript": {
        "includeFilePathRegularExpression": "^(.+/)?index\\.js$",
        "pattern": {
          "#": "This is how we can make our main exported artefact executable.",
          "__evaluate__": "`#!/usr/bin/env node\n// -*- coding: utf-8 -*-\n${self.generic.assetPattern.javaScript.pattern}if(module===eval('require.main'))module.paths.unshift('/application/node_modules');{1}`"
        }
      }
    },
    "exportFormat": {
      "external": "commonjs2",
      "self": "commonjs2"
    },
    "injection": {
      "entry": {
        "__evaluate__": "2 < self.givenCommandLineArguments.length && self.givenCommandLineArguments[2].startsWith('test') ? {testBundle: 'test'} : {index: './index.ts', unixCrypt: './unixCrypt.ts'}"
      }
    },
    "module": {
      "optimizer": {
        "babelMinify": {
          "#": "To provide a logging output we need to exclude this feature.",
          "__evaluate__": "self.debug ? {bundle: null, module: null} : {bundle: {transform: {removeConsole: false}}, module: {removeConsole: false}}"
        }
      }
    },
    "targetTechnology": {
      "boilerplate": "node",
      "payload": "node"
    }
  },
  "packageManager": "yarn@4.9.2+sha512.1fc009bc09d13cfd0e19efa44cbfc2b9cf6ca61482725eb35bbc5e257e093ebf4130db6dfe15d604ff4b79efd8e1e8e99b25fa7d0a6197c9f9826358d4d65c3c"
}
